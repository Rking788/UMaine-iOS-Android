package org.umece.android.umaine;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;

import android.app.Activity;
import android.os.Bundle;
import android.widget.TextView;

public class UMCourses extends Activity {
	/** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        TextView tv = new TextView(this);
        List<Semester> schedule = new ArrayList<Semester>();
        
        if (getFilesDir().listFiles().length > 0) {
        	try {
		        for (File f : getFilesDir().listFiles()) {
		        	schedule.add(new Semester(f.getName(), this));
		        }

		        String screen = "Courses:\n";
		        for (Semester sem : schedule) {
		        	int i;
		        	screen = screen + sem.getFile() + " " + sem.size() + "\n";
		        	for (i = 0; i < sem.size(); i++) {
		        		screen = screen + sem.getCourse(i) + "\n";
		        	}
		        }
		        tv.setText(screen);
        	} catch (Exception e) {
        		tv.setText("First half fail");
        	}
        } else {
        	try {
				schedule.add(new Semester("F09.txt", this, "UM", "2009", "Fall", "ECE"));
				Course new_course = new Course("101", "Intro", "001", "First Class", 
						"MWF", "1300-1400", "Barrows", "BW130");
				schedule.get(0).addCourse(new_course);
				new_course = new Course("473", "Arch", "001", "Old Class", 
						"MWF", "1400-1500", "Boardman", "210");
				schedule.get(0).addCourse(new_course);
				new_course = new Course("571", "Embedded", "001", "Other Class", 
						"TH", "1200-1400", "Bennett", "B142");
				schedule.get(0).addCourse(new_course);
				schedule.add(new Semester("F10.txt", this, "UM", "2009", "Fall", "ECE"));
				new_course = new Course("102", "Intro", "005", "First Class", 
						"MWF", "1300-1400", "Barrows", "BW130");
				schedule.get(1).addCourse(new_course);
				new_course = new Course("474", "Arch", "006", "Old Class", 
						"MWF", "1400-1500", "Boardman", "210");
				schedule.get(1).addCourse(new_course);
				new_course = new Course("572", "Embedded", "007", "Other Class", 
						"TH", "1200-1400", "Bennett", "B142");
				schedule.get(1).addCourse(new_course);
				
				tv.setText("Schedule File Created");
			} catch (Exception e) {
				tv.setText("Failed to create semester");
			}
        }

        setContentView(tv);

        /*
        setContentView(R.layout.courses);
        try{
            doHttpStuff();    	
        }
        catch(Exception e){
        	throw new RuntimeException(e);
        }*/
    }
    
    public void doHttpStuff() throws Exception {
    	BufferedReader in = null;
    	try {
    		HttpClient client = new DefaultHttpClient();
    		HttpPost request = new HttpPost("http://with.eece.maine.edu/sample.php");
    		
    		List<NameValuePair> postParams = new ArrayList<NameValuePair>();
    		postParams.add(new BasicNameValuePair("one", "thevalueone"));
    		
    		UrlEncodedFormEntity formEntity = new UrlEncodedFormEntity(postParams);
    		
    		request.setEntity(formEntity);
    		HttpResponse response = client.execute(request);
    		in = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
    		
    		StringBuffer sb = new StringBuffer("");
    		
    		String line = "";
    		String NL = System.getProperty("line.separator");
    		while ((line = in.readLine()) != null){
    			sb.append(NL);
    			sb.append(line);
    			sb.append(NL);
    		}
    		in.close();
    		
    		String result = sb.toString();
    		TextView tv = (TextView) findViewById(R.id.courseslabel);
    		tv.append(result);
    	} finally {
    		if (in != null) {
    			try{
    				in.close();
    			}
    			catch (IOException e) {
    				throw new RuntimeException(e);
    			}
    		}
    	}
    }
}
